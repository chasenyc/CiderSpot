c
result_one.updated_at
result_three.updated_at
result_two.updated_at
result_two.updated_at >= result_three.updated_at
result_one.updated_at >= result_two.updated_at
result_one.updated_at.methods
result_one.updated_at.class
result_one.updated_at
c
result_two.average.to_f
result_one.average.to_f
result_one.average
result_two.reviews.first.average
result_one.reviews.first.average
result_one.review.firs
result_one.review.first.average
c
result_one.total_scores
result_one.to_s
result_one.class
result_one.methods
result_one
result_two.reviews
result_one.reviews
result_three.average.to_f
result_two.average.to_f
result_one.average.to_f
c
result_two.reviews
result_one.reviews
result_one.review
result_two.average.to_f
result_one.average.to_f
result_one.average
c
result_two.reviews
result_one.reviews
result_three.average.to_f
result_two.average.to_f
result_one.average.to_f
result_one.average.to_i
result_one.average
result_one.reviews
result_one.total_scores
result_one
Review.all
c
Review.all
result_one.reviews
result_one.total_scores
c
Review.all
result_two.reviews
result_two
result_one.reviews
result_one
c
Cider.top_rated
Cider.top_rated.first
Cider.top_rated
Cider.toprated
a.count
a = Cider.top_rated
a.size
a = Cider.top_rated
Cider.top_rated.count
Cider.top_rated
c
Cider.all
build(:cider)
Cider.all
Cider.top_rated
quit
Cider.all
Cider.top_rated
result_one
c
@cider.attribute_present?(:average)
@cider.attribute_present?(average)
@cider.attribute_present?
@cider.includes
@cider.methods
@cider.type
@cider.class
c
@cider.average = 1
(@cider.average)
(@cider.average
(!@cider.average)
@cider
c
cc
c
self.average
c
self.average
self
quit
    reviews.select('((reviews.overall_rating + reviews.look_rating + reviews.smell_rating + reviews.feel_rating + reviews.taste_rating) / 5) AS total_scores').group('reviews.cider_id')
    reviews.select('((reviews.overall_rating + reviews.look_rating + reviews.smell_rating + reviews.feel_rating + reviews.taste_rating) / 5) AS total_scores')
          reviews.taste_rating) / 5) AS total_scores')
          reviews.look_rating + reviews.smell_rating + reviews.feel_rating +
    reviews.select('((reviews.overall_rating +
reviews.select(:id)
reviews.select
reviews
self
c
cc
c
reviews.count.size
reviews.count
reviews
c
averages.size
c
averages.size
c
averages.size
c
averages.size
c
averages.size
c
averages.size
averages
c
cider
cider.average
cider.averahe
c
x
c
cider.brewery_id
c
cider.brewery_id
c
cider.brewery_id
c
cider.brewery_id
c
cider.brewery_id
c
cider.brewery_id
c
cider.brewery_id
c
cider.brewery_id
c
cider.brewery_id
cider
c
params
quit
bob
quit
bob
quit
bob
quit
bob
quit
bob
quit
bob.load
bob.first
bob
quit
subquery.first.total_scores
subquery.first
quit
subquery.first
quit
subquery.first
subquery.load
quit
subquery.load
quit
subquery.load
quit
subquery.load
subquery
quit
subquery.load
subquery
c
a = Cider.top_rated
c
a.load
a = Cider.top_rated
c
a.load
a
a = Cider.top_rated
c
a = Cider.top_rated
c
a
a = Cider.top_rated
c
a.first[1]
a.first[1].to_f.round(2)
a.first[1].to_f
a.first[1].round(1)
a.first[1].round(5)
a.first[1].round(2)
a.first[1].to_d
a.first[1].ceil
a.first[1].methods.to_s.ceil
a.first[1].methods.to_s
a.first[1]
a.first
a
a = Cider.top_rated
c
Cider.top_rated
c
Cider.top_rated
c
Cider.top_rated
Cider.top_rated.first
c
Cider.top_rated.first
c
Cider.top_rated.first
Cider.top_rated.count
Cider.top_rated.load
c
Cider.top_rated.load
c
Cider.top_rated.load
Cider.top_rated
c
cider
c
wants.cider
cider
c
want.cider
want
c
want
c
want.methods
want.1
want
c
want
c
cider
this
user.wants
c
@ciders.current_page
@ciders.methods.to_s
